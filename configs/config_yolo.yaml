# CNET Agent Configuration for YOLO Inference
# This configuration is optimized for YOLO inference tasks

# Agent configuration
agent:
  name: "cnet-yolo-agent"
  version: "1.0.0"
  description: "CNET Agent with YOLO inference capabilities"
  
# Server configuration
server:
  host: "0.0.0.0"
  port: 8080
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"

# Logging configuration
logging:
  level: "info"
  format: "json"
  output: "stdout"
  file: "/tmp/cnet/yolo-agent.log"

# Discovery configuration
discovery:
  enabled: true
  servers:
    - "localhost:8080"
  register_interval: "30s"
  heartbeat_interval: "10s"
  node_ttl: "60s"
  
# Resource monitoring
resources:
  enabled: true
  update_interval: "5s"
  cpu_threshold: 80.0
  memory_threshold: 80.0
  disk_threshold: 90.0

# Task execution configuration
tasks:
  # YOLO-specific configuration
  yolo:
    enabled: true
    max_concurrent_tasks: 5
    default_timeout: "300s"
    cleanup_interval: "60s"
    
    # YOLO model configuration
    model:
      default_type: "yolov8"
      default_confidence: 0.5
      default_iou_threshold: 0.45
      default_image_size: 640
      max_detections: 100
      
    # Resource limits for YOLO tasks
    resources:
      cpu_limit: 2.0
      memory_limit: 4096  # MB
      disk_limit: 1024    # MB
      gpu_limit: 1
        
    # Environment variables for YOLO tasks
    env:
      CUDA_VISIBLE_DEVICES: "0"
      PYTHONPATH: "/opt/yolo"
      OMP_NUM_THREADS: "4"
      
  # Process tasks
  process:
    enabled: true
    max_concurrent_tasks: 10
    default_timeout: "60s"
    
  # Container tasks  
  container:
    enabled: true
    max_concurrent_tasks: 3
    default_timeout: "300s"
    
  # VM tasks
  vm:
    enabled: true
    max_concurrent_tasks: 2
    default_timeout: "600s"

# ML service configuration
ml:
  enabled: true
  inference_engines:
    - "python"
    - "tensorflow" 
    - "pytorch"
    - "yolo"  # YOLO inference engine
    
  # YOLO-specific ML configuration
  yolo:
    model_path: "/opt/yolo/models"
    script_path: "/opt/yolo/scripts"
    server_port_range: [9000, 9100]
    health_check_interval: "30s"
    
    # Supported YOLO versions
    supported_versions:
      - "yolov5"
      - "yolov8"
      - "yolov9"
      - "yolov10"
      
    # Default classes (COCO dataset)
    default_classes:
      - "person"
      - "bicycle" 
      - "car"
      - "motorcycle"
      - "airplane"
      - "bus"
      - "train"
      - "truck"
      - "boat"
      - "traffic light"
      - "fire hydrant"
      - "stop sign"
      - "parking meter"
      - "bench"
      - "bird"
      - "cat"
      - "dog"
      - "horse"
      - "sheep"
      - "cow"

# API configuration
api:
  # YOLO-specific API endpoints
  yolo:
    enabled: true
    base_path: "/api/yolo"
    endpoints:
      tasks: "/tasks"
      predict: "/tasks/{id}/predict"
      model_info: "/tasks/{id}/model"
      health: "/tasks/{id}/health"
      logs: "/tasks/{id}/logs"
      
  # Rate limiting for YOLO inference
  rate_limits:
    yolo_inference: "100/minute"
    yolo_model_loading: "10/minute"
    
  # CORS configuration
  cors:
    enabled: true
    allowed_origins: ["*"]
    allowed_methods: ["GET", "POST", "DELETE", "OPTIONS"]
    allowed_headers: ["Content-Type", "Authorization"]

# Security configuration
security:
  # API key authentication (optional)
  api_key:
    enabled: false
    header: "X-API-Key"
    
  # Rate limiting
  rate_limiting:
    enabled: true
    requests_per_minute: 1000
    
  # Request size limits
  max_request_size: "10MB"
  max_image_size: "50MB"

# Monitoring and metrics
monitoring:
  enabled: true
  metrics_port: 9090
  health_check_interval: "30s"
  
  # YOLO-specific metrics
  yolo_metrics:
    inference_latency: true
    detection_count: true
    model_loading_time: true
    error_rate: true

# Storage configuration
storage:
  # Temporary files for YOLO inference
  temp_dir: "/tmp/cnet/yolo"
  model_cache_dir: "/tmp/cnet/yolo/models"
  log_dir: "/tmp/cnet/yolo/logs"
  
  # Cleanup configuration
  cleanup:
    enabled: true
    interval: "1h"
    max_age: "24h"
    max_size: "10GB"
